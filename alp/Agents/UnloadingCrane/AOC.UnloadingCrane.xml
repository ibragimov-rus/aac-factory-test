<?xml version="1.0" encoding="UTF-8"?>
<ActiveObjectClass>
	<Id>1343119180443</Id>
	<Name><![CDATA[UnloadingCrane]]></Name>
	<StartupCode><![CDATA[states.add(0);]]></StartupCode>
	<Generic>false</Generic>
	<GenericParameter>
		<Id>1429438648822</Id>
		<Name><![CDATA[1429438648822]]></Name>
		<GenericParameterValue Class="CodeValue">
			<Code><![CDATA[T]]></Code>
		</GenericParameterValue>
		<GenericParameterLabel>Generic parameters:</GenericParameterLabel>
	</GenericParameter>
	<FlowChartsUsage>ENTITY</FlowChartsUsage>
	<SamplesToKeep>100</SamplesToKeep>
	<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
	<ElementsLimitValue>100</ElementsLimitValue>
	<MakeDefaultViewArea>true</MakeDefaultViewArea>
	<SceneGridColor/>
	<SceneBackgroundColor/>
	<SceneSkybox>null</SceneSkybox>
	<AgentProperties>
		<EnvironmentDefinesInitialLocation>false</EnvironmentDefinesInitialLocation>
		<RotateAnimationTowardsMovement>false</RotateAnimationTowardsMovement>
		<RotateAnimationVertically>false</RotateAnimationVertically>
		<VelocityCode Class="CodeUnitValue">
			<Code><![CDATA[speed]]></Code>
			<Unit Class="SpeedUnits">MPS</Unit>
		</VelocityCode>
		<PhysicalLength Class="CodeUnitValue">
			<Code><![CDATA[1]]></Code>
			<Unit Class="LengthUnits">METER</Unit>
		</PhysicalLength>
		<PhysicalWidth Class="CodeUnitValue">
			<Code><![CDATA[1]]></Code>
			<Unit Class="LengthUnits">METER</Unit>
		</PhysicalWidth>
		<PhysicalHeight Class="CodeUnitValue">
			<Code><![CDATA[1]]></Code>
			<Unit Class="LengthUnits">METER</Unit>
		</PhysicalHeight>
	</AgentProperties>
	<EnvironmentProperties>
		<EnableSteps>false</EnableSteps>
		<StepDurationCode Class="CodeUnitValue">
			<Code><![CDATA[1.0]]></Code>
			<Unit Class="TimeUnits">MINUTE</Unit>
		</StepDurationCode>
		<SpaceType>CONTINUOUS</SpaceType>
		<WidthCode>500</WidthCode>
		<HeightCode>500</HeightCode>
		<ZHeightCode>0</ZHeightCode>
		<ColumnsCountCode>100</ColumnsCountCode>
		<RowsCountCode>100</RowsCountCode>
		<NeigborhoodType>MOORE</NeigborhoodType>
		<LayoutType>USER_DEF</LayoutType>
		<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
		<NetworkType>USER_DEF</NetworkType>
		<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
		<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
		<ConnectionsRangeCode>50</ConnectionsRangeCode>
		<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
		<MCode>10</MCode>
	</EnvironmentProperties>
	<DatasetsCreationProperties>
		<AutoCreate>true</AutoCreate>
		<OccurrenceAtTime>true</OccurrenceAtTime>
		<OccurrenceDate>1429516800000</OccurrenceDate>
		<OccurrenceTime Class="CodeUnitValue">
			<Code><![CDATA[0]]></Code>
			<Unit Class="TimeUnits">MINUTE</Unit>
		</OccurrenceTime>
		<RecurrenceCode Class="CodeUnitValue">
			<Code><![CDATA[1]]></Code>
			<Unit Class="TimeUnits">MINUTE</Unit>
		</RecurrenceCode>
	</DatasetsCreationProperties>
	<ScaleRuler>
		<Id>1429438648825</Id>
		<Name><![CDATA[scale]]></Name>
		<X>0</X>
		<Y>-150</Y>
		<PublicFlag>false</PublicFlag>
		<PresentationFlag>false</PresentationFlag>
		<ShowLabel>false</ShowLabel>
		<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
		<Length>100</Length>
		<Rotation>0</Rotation>
		<ScaleType>EXPLICITLY_DEFINED</ScaleType>
		<ModelLength>10</ModelLength>
		<LengthUnits>METER</LengthUnits>
		<Scale>8</Scale>
		<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
	</ScaleRuler>
	<CurrentLevel>1564077346904</CurrentLevel>
	<ConnectionsId>1375200311853</ConnectionsId>
	<Variables/>
	<StatechartElements>
		<StatechartElement Class="State" ParentState="ROOT_NODE">
			<Id>1343119205011</Id>
			<Name><![CDATA[Waiting]]></Name>
			<X>230</X>
			<Y>70</Y>
			<Label>
				<X>10</X>
				<Y>10</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<Properties Width="150" Height="160">
				<EntryAction>downtimeStart = time();
if (getY() == in.getY()){
	unloading.hold.setBlocked(false);
}</EntryAction>
				<ExitAction>currentCake.setXYZ(0, -1, 0);
statisticsDowntime.add(time() - downtimeStart);</ExitAction>
				<FillColor/>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="State" ParentState="ROOT_NODE">
			<Id>1343119205013</Id>
			<Name><![CDATA[Moving]]></Name>
			<X>250</X>
			<Y>290</Y>
			<Label>
				<X>10</X>
				<Y>10</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<Properties Width="110" Height="30">
				<EntryAction>enterState(1);
moveTo(destination);</EntryAction>
				<FillColor/>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="State" ParentState="ROOT_NODE">
			<Id>1343119205015</Id>
			<Name><![CDATA[Loading]]></Name>
			<X>90</X>
			<Y>290</Y>
			<Label>
				<X>10</X>
				<Y>10</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<Properties Width="100" Height="30">
				<EntryAction>enterState(2);
halfLoading.restart();</EntryAction>
				<ExitAction>isEmpty = false;
if (getY() == in.getY()){
	main.toUnloadCraneCount--;
	main.hold2.setBlocked(false);
}</ExitAction>
				<FillColor/>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="State" ParentState="ROOT_NODE">
			<Id>1343119205017</Id>
			<Name><![CDATA[Unloading]]></Name>
			<X>420</X>
			<Y>290</Y>
			<Label>
				<X>10</X>
				<Y>10</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<Properties Width="100" Height="30">
				<EntryAction>enterState(3);
halfUnloading.restart();</EntryAction>
				<ExitAction>//unload finished
unloading.moving.stopDelay(currentCake);
currentCake = null;
isEmpty = true;</ExitAction>
				<FillColor/>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="State" ParentState="ROOT_NODE">
			<Id>1344266532429</Id>
			<Name><![CDATA[Wait4separation]]></Name>
			<X>90</X>
			<Y>380</Y>
			<Label>
				<X>10</X>
				<Y>10</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<Properties Width="110" Height="30">
				<FillColor/>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="Branch" ParentState="ROOT_NODE">
			<Id>1345028560676</Id>
			<Name><![CDATA[branch]]></Name>
			<X>300</X>
			<Y>400</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Properties/>
		</StatechartElement>
		<StatechartElement Class="State" ParentState="Waiting" ParentStateId="1343119205011">
			<Id>1347355402772</Id>
			<Name><![CDATA[Waiting4task]]></Name>
			<X>240</X>
			<Y>180</Y>
			<Label>
				<X>10</X>
				<Y>10</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<Properties Width="100" Height="30">
				<EntryAction>enterState(0);
</EntryAction>
				<FillColor/>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="State" ParentState="Waiting" ParentStateId="1343119205011">
			<Id>1347355402774</Id>
			<Name><![CDATA[Waiting4nextService]]></Name>
			<X>240</X>
			<Y>90</Y>
			<Label>
				<X>10</X>
				<Y>10</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<Properties Width="130" Height="30">
				<EntryAction>enterState(5);</EntryAction>
				<FillColor/>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="EntryPoint" ParentState="ROOT_NODE">
			<Id>1343119205019</Id>
			<Name><![CDATA[statechart]]></Name>
			<X>300</X>
			<Y>40</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>0</X>
					<Y>30</Y>
				</Point>
			</Points>
			<Properties Target="1343119205011"/>
		</StatechartElement>
		<StatechartElement Class="Transition" ParentState="ROOT_NODE">
			<Id>1343119205021</Id>
			<Name><![CDATA[transition12]]></Name>
			<X>230</X>
			<Y>130</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>-90</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>-90</X>
					<Y>160</Y>
				</Point>
			</Points>
			<IconOffset>119.0</IconOffset>
			<Properties Source="1343119205011" Target="1343119205015" Trigger="condition">
				<Action>taskWaitingTime.add(time() - delayedTasks.get(0).arrivalTime);
currentCake = (Cake)delayedTasks.get(0).agent;
delayedTasks.remove(0);
if (main.greenSeparationEnabled) 
	destination = out;
else 
	destination = separation;</Action>
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Condition>currentCake != null &amp;&amp; nextServiceReady</Condition>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<MessageType>Cake</MessageType>
				<DefaultTransition>true</DefaultTransition>
				<FilterType>unconditionally</FilterType>
				<EqualsExpression>"text"</EqualsExpression>
				<SatisfiesExpression>!(((msg.state == 0) &amp;&amp; (this.getY() == in.y)) || ((msg.state == 1) &amp;&amp; (this.getY() == cakeToPlace.get(currentCake).y)))</SatisfiesExpression>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="Transition" ParentState="ROOT_NODE">
			<Id>1343119205023</Id>
			<Name><![CDATA[transition14]]></Name>
			<X>360</X>
			<Y>310</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>60</X>
					<Y>0</Y>
				</Point>
			</Points>
			<IconOffset>24.0</IconOffset>
			<Properties Source="1343119205013" Target="1343119205017" Trigger="arrival">
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Condition>true</Condition>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<Guard>!isEmpty</Guard>
				<MessageType>Object</MessageType>
				<DefaultTransition>true</DefaultTransition>
				<FilterType>unconditionally</FilterType>
				<EqualsExpression>"text"</EqualsExpression>
				<SatisfiesExpression>true</SatisfiesExpression>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="Transition" ParentState="ROOT_NODE">
			<Id>1343119205027</Id>
			<Name><![CDATA[transition17]]></Name>
			<X>190</X>
			<Y>310</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>60</X>
					<Y>0</Y>
				</Point>
			</Points>
			<IconOffset>24.0</IconOffset>
			<Properties Source="1343119205015" Target="1343119205013" Trigger="timeout">
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[loadTime]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Condition>true</Condition>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<MessageType>String</MessageType>
				<DefaultTransition>true</DefaultTransition>
				<FilterType>equalsTo</FilterType>
				<EqualsExpression>"Loading finished"</EqualsExpression>
				<SatisfiesExpression>true</SatisfiesExpression>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="Transition" ParentState="ROOT_NODE">
			<Id>1344266539182</Id>
			<Name><![CDATA[transition19]]></Name>
			<X>470</X>
			<Y>320</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>0</X>
					<Y>80</Y>
				</Point>
				<Point>
					<X>-158</X>
					<Y>80</Y>
				</Point>
			</Points>
			<IconOffset>113.0</IconOffset>
			<Properties Source="1343119205017" Target="1345028560676" Trigger="timeout">
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[loadTime]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Condition>true</Condition>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<MessageType>Object</MessageType>
				<DefaultTransition>true</DefaultTransition>
				<FilterType>unconditionally</FilterType>
				<EqualsExpression>"text"</EqualsExpression>
				<SatisfiesExpression>true</SatisfiesExpression>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="Transition" ParentState="ROOT_NODE">
			<Id>1344266557450</Id>
			<Name><![CDATA[transition1]]></Name>
			<X>140</X>
			<Y>380</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>0</X>
					<Y>-60</Y>
				</Point>
			</Points>
			<IconOffset>24.0</IconOffset>
			<Properties Source="1344266532429" Target="1343119205015" Trigger="condition">
				<Action>destination = out;</Action>
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Condition>currentCake != null</Condition>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<MessageType>Object</MessageType>
				<DefaultTransition>true</DefaultTransition>
				<FilterType>satisfies</FilterType>
				<EqualsExpression>"text"</EqualsExpression>
				<SatisfiesExpression>true</SatisfiesExpression>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="Transition" ParentState="ROOT_NODE">
			<Id>1344324088658</Id>
			<Name><![CDATA[transition2]]></Name>
			<X>300</X>
			<Y>290</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>0</X>
					<Y>-60</Y>
				</Point>
			</Points>
			<IconOffset>24.0</IconOffset>
			<Properties Source="1343119205013" Target="1343119205011" Trigger="arrival">
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Condition>true</Condition>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<Guard>isEmpty</Guard>
				<MessageType>Object</MessageType>
				<DefaultTransition>true</DefaultTransition>
				<FilterType>unconditionally</FilterType>
				<EqualsExpression>"text"</EqualsExpression>
				<SatisfiesExpression>true</SatisfiesExpression>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="Transition" ParentState="ROOT_NODE">
			<Id>1345028575542</Id>
			<Name><![CDATA[transition3]]></Name>
			<X>288</X>
			<Y>400</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>-88</X>
					<Y>0</Y>
				</Point>
			</Points>
			<IconOffset>38.0</IconOffset>
			<Properties Source="1345028560676" Target="1344266532429" Trigger="timeout">
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Condition>getY() == separation.getY()</Condition>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<MessageType>Object</MessageType>
				<DefaultTransition>false</DefaultTransition>
				<FilterType>unconditionally</FilterType>
				<EqualsExpression>"text"</EqualsExpression>
				<SatisfiesExpression>true</SatisfiesExpression>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="Transition" ParentState="ROOT_NODE">
			<Id>1345028584746</Id>
			<Name><![CDATA[transition4]]></Name>
			<X>300</X>
			<Y>390</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>0</X>
					<Y>-70</Y>
				</Point>
			</Points>
			<IconOffset>29.0</IconOffset>
			<Properties Source="1345028560676" Target="1343119205013" Trigger="timeout">
				<Action>destination = in;</Action>
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Condition>this.getY() == out</Condition>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<MessageType>Object</MessageType>
				<DefaultTransition>true</DefaultTransition>
				<FilterType>unconditionally</FilterType>
				<EqualsExpression>"text"</EqualsExpression>
				<SatisfiesExpression>true</SatisfiesExpression>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="Transition"
                     ParentState="Waiting"
                     ParentStateId="1343119205011">
			<Id>1347355402776</Id>
			<Name><![CDATA[transition20]]></Name>
			<X>290</X>
			<Y>180</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>0</X>
					<Y>-60</Y>
				</Point>
			</Points>
			<IconOffset>24.0</IconOffset>
			<Properties Source="1347355402772" Target="1347355402774" Trigger="condition">
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[delayedTasks.size()>0]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Condition>delayedTasks.size() &gt; 0</Condition>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<MessageType>String</MessageType>
				<DefaultTransition>true</DefaultTransition>
				<FilterType>equalsTo</FilterType>
				<EqualsExpression>"Unloading finished"</EqualsExpression>
				<SatisfiesExpression>true</SatisfiesExpression>
			</Properties>
		</StatechartElement>
		<StatechartElement Class="InitialStatePointer"
                     ParentState="Waiting"
                     ParentStateId="1343119205011">
			<Id>1347355402778</Id>
			<Name><![CDATA[initialState]]></Name>
			<X>360</X>
			<Y>190</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>false</ShowLabel>
			<Points>
				<Point>
					<X>0</X>
					<Y>0</Y>
				</Point>
				<Point>
					<X>-20</X>
					<Y>0</Y>
				</Point>
			</Points>
			<Properties Target="1347355402772"/>
		</StatechartElement>
	</StatechartElements>
	<Events>
		<Event>
			<Id>1347968788843</Id>
			<Name><![CDATA[halfLoading]]></Name>
			<X>-200</X>
			<Y>340</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<Properties TriggerType="timeout" Mode="userControls">
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[loadTime/2]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<OccurrenceAtTime>true</OccurrenceAtTime>
				<OccurrenceDate>1347948602930</OccurrenceDate>
				<OccurrenceTime Class="CodeUnitValue">
					<Code><![CDATA[0]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</OccurrenceTime>
				<RecurrenceCode Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</RecurrenceCode>
				<Condition>false</Condition>
			</Properties>
			<Action>lift = !lift;</Action>
		</Event>
		<Event>
			<Id>1347968788858</Id>
			<Name><![CDATA[halfUnloading]]></Name>
			<X>-200</X>
			<Y>370</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<Properties TriggerType="timeout" Mode="userControls">
				<Timeout Class="CodeUnitValue">
					<Code><![CDATA[loadTime/2]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</Timeout>
				<Rate Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="RateUnits">PER_MINUTE</Unit>
				</Rate>
				<OccurrenceAtTime>true</OccurrenceAtTime>
				<OccurrenceDate>1347948602930</OccurrenceDate>
				<OccurrenceTime Class="CodeUnitValue">
					<Code><![CDATA[0]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</OccurrenceTime>
				<RecurrenceCode Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="TimeUnits">MINUTE</Unit>
				</RecurrenceCode>
				<Condition>false</Condition>
			</Properties>
			<Action>lift = !lift;
currentCake.setSpace(main);
if(unloading.batch.size() == 0)
	currentCake.setNetworkNode(main.out1);
else
	currentCake.setNetworkNode(main.out2);</Action>
		</Event>
	</Events>
	<Functions/>
	<AnalysisData>
		<Statistics>
			<Id>1343805299189</Id>
			<Name><![CDATA[statisticsDowntime]]></Name>
			<X>-400</X>
			<Y>372</Y>
			<Label>
				<X>15</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<AutoUpdate>false</AutoUpdate>
			<OccurrenceAtTime>true</OccurrenceAtTime>
			<OccurrenceDate>1429516800000</OccurrenceDate>
			<OccurrenceTime Class="CodeUnitValue">
				<Code><![CDATA[0]]></Code>
				<Unit Class="TimeUnits">MINUTE</Unit>
			</OccurrenceTime>
			<RecurrenceCode Class="CodeUnitValue">
				<Code><![CDATA[1]]></Code>
				<Unit Class="TimeUnits">MINUTE</Unit>
			</RecurrenceCode>
			<Discrete>true</Discrete>
		</Statistics>
		<Statistics>
			<Id>1343979679465</Id>
			<Name><![CDATA[taskWaitingTime]]></Name>
			<X>-400</X>
			<Y>402</Y>
			<Label>
				<X>15</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<AutoUpdate>true</AutoUpdate>
			<OccurrenceAtTime>true</OccurrenceAtTime>
			<OccurrenceDate>1429516800000</OccurrenceDate>
			<OccurrenceTime Class="CodeUnitValue">
				<Code><![CDATA[0]]></Code>
				<Unit Class="TimeUnits">MINUTE</Unit>
			</OccurrenceTime>
			<RecurrenceCode Class="CodeUnitValue">
				<Code><![CDATA[1]]></Code>
				<Unit Class="TimeUnits">MINUTE</Unit>
			</RecurrenceCode>
			<Discrete>true</Discrete>
		</Statistics>
		<DataSet>
			<Id>1346684040388</Id>
			<Name><![CDATA[states]]></Name>
			<X>-400</X>
			<Y>490</Y>
			<Label>
				<X>15</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<AutoUpdate>false</AutoUpdate>
			<OccurrenceAtTime>true</OccurrenceAtTime>
			<OccurrenceDate>1429516800000</OccurrenceDate>
			<OccurrenceTime Class="CodeUnitValue">
				<Code><![CDATA[0]]></Code>
				<Unit Class="TimeUnits">MINUTE</Unit>
			</OccurrenceTime>
			<RecurrenceCode Class="CodeUnitValue">
				<Code><![CDATA[1]]></Code>
				<Unit Class="TimeUnits">MINUTE</Unit>
			</RecurrenceCode>
			<FreezeXAxis>true</FreezeXAxis>
			<VerticalAxisExpression>state</VerticalAxisExpression>
			<SamplesToKeep>900</SamplesToKeep>
		</DataSet>
	</AnalysisData>
	<AgentLinks>
		<AgentLink>
			<Id>1375200311853</Id>
			<Name><![CDATA[connections]]></Name>
			<X>50</X>
			<Y>-50</Y>
			<Label>
				<X>15</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<OnReceive>Task task = new Task(msg, time());
delayedTasks.add(task);</OnReceive>
			<HandleReceiveInConnections>false</HandleReceiveInConnections>
			<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
			<AgentLinkBidirectional>true</AgentLinkBidirectional>
			<MessageType>Cake</MessageType>
			<StatechartReference>
				<PackageName>aac_factory</PackageName>
				<ClassName>UnloadingCrane</ClassName>
				<ItemName>statechart</ItemName>
			</StatechartReference>
			<LineStyle>SOLID</LineStyle>
			<LineWidth>1</LineWidth>
			<LineColor>-16777216</LineColor>
			<LineZOrder>UNDER_AGENTS</LineZOrder>
			<LineArrow>NONE</LineArrow>
			<LineArrowPosition>END</LineArrowPosition>
		</AgentLink>
	</AgentLinks>
	<ContainerLinks>
		<ContainerLink>
			<Id>1395142873062</Id>
			<Name><![CDATA[main]]></Name>
			<X>50</X>
			<Y>-100</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<ActiveObjectClass>
				<PackageName>aac_factory</PackageName>
				<ClassName>Main</ClassName>
			</ActiveObjectClass>
		</ContainerLink>
		<ContainerLink>
			<Id>1395142873063</Id>
			<Name><![CDATA[unloading]]></Name>
			<X>150</X>
			<Y>-100</Y>
			<Label>
				<X>10</X>
				<Y>0</Y>
			</Label>
			<PublicFlag>false</PublicFlag>
			<PresentationFlag>true</PresentationFlag>
			<ShowLabel>true</ShowLabel>
			<ActiveObjectClass>
				<PackageName>aac_factory</PackageName>
				<ClassName>Unloading</ClassName>
			</ActiveObjectClass>
		</ContainerLink>
	</ContainerLinks>
	<Presentation/>
</ActiveObjectClass>
